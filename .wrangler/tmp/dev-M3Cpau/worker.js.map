{
  "version": 3,
  "sources": ["../../../node_modules/aws4fetch/dist/aws4fetch.esm.mjs", "../../../src/worker.js", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-MuY1ls/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-MuY1ls/middleware-loader.entry.ts"],
  "sourceRoot": "/home/runner/workspace/.wrangler/tmp/dev-M3Cpau",
  "sourcesContent": ["/**\n * @license MIT <https://opensource.org/licenses/MIT>\n * @copyright Michael Hart 2024\n */\nconst encoder = new TextEncoder();\nconst HOST_SERVICES = {\n  appstream2: 'appstream',\n  cloudhsmv2: 'cloudhsm',\n  email: 'ses',\n  marketplace: 'aws-marketplace',\n  mobile: 'AWSMobileHubService',\n  pinpoint: 'mobiletargeting',\n  queue: 'sqs',\n  'git-codecommit': 'codecommit',\n  'mturk-requester-sandbox': 'mturk-requester',\n  'personalize-runtime': 'personalize',\n};\nconst UNSIGNABLE_HEADERS = new Set([\n  'authorization',\n  'content-type',\n  'content-length',\n  'user-agent',\n  'presigned-expires',\n  'expect',\n  'x-amzn-trace-id',\n  'range',\n  'connection',\n]);\nclass AwsClient {\n  constructor({ accessKeyId, secretAccessKey, sessionToken, service, region, cache, retries, initRetryMs }) {\n    if (accessKeyId == null) throw new TypeError('accessKeyId is a required option')\n    if (secretAccessKey == null) throw new TypeError('secretAccessKey is a required option')\n    this.accessKeyId = accessKeyId;\n    this.secretAccessKey = secretAccessKey;\n    this.sessionToken = sessionToken;\n    this.service = service;\n    this.region = region;\n    this.cache = cache || new Map();\n    this.retries = retries != null ? retries : 10;\n    this.initRetryMs = initRetryMs || 50;\n  }\n  async sign(input, init) {\n    if (input instanceof Request) {\n      const { method, url, headers, body } = input;\n      init = Object.assign({ method, url, headers }, init);\n      if (init.body == null && headers.has('Content-Type')) {\n        init.body = body != null && headers.has('X-Amz-Content-Sha256') ? body : await input.clone().arrayBuffer();\n      }\n      input = url;\n    }\n    const signer = new AwsV4Signer(Object.assign({ url: input.toString() }, init, this, init && init.aws));\n    const signed = Object.assign({}, init, await signer.sign());\n    delete signed.aws;\n    try {\n      return new Request(signed.url.toString(), signed)\n    } catch (e) {\n      if (e instanceof TypeError) {\n        return new Request(signed.url.toString(), Object.assign({ duplex: 'half' }, signed))\n      }\n      throw e\n    }\n  }\n  async fetch(input, init) {\n    for (let i = 0; i <= this.retries; i++) {\n      const fetched = fetch(await this.sign(input, init));\n      if (i === this.retries) {\n        return fetched\n      }\n      const res = await fetched;\n      if (res.status < 500 && res.status !== 429) {\n        return res\n      }\n      await new Promise(resolve => setTimeout(resolve, Math.random() * this.initRetryMs * Math.pow(2, i)));\n    }\n    throw new Error('An unknown error occurred, ensure retries is not negative')\n  }\n}\nclass AwsV4Signer {\n  constructor({ method, url, headers, body, accessKeyId, secretAccessKey, sessionToken, service, region, cache, datetime, signQuery, appendSessionToken, allHeaders, singleEncode }) {\n    if (url == null) throw new TypeError('url is a required option')\n    if (accessKeyId == null) throw new TypeError('accessKeyId is a required option')\n    if (secretAccessKey == null) throw new TypeError('secretAccessKey is a required option')\n    this.method = method || (body ? 'POST' : 'GET');\n    this.url = new URL(url);\n    this.headers = new Headers(headers || {});\n    this.body = body;\n    this.accessKeyId = accessKeyId;\n    this.secretAccessKey = secretAccessKey;\n    this.sessionToken = sessionToken;\n    let guessedService, guessedRegion;\n    if (!service || !region) {\n[guessedService, guessedRegion] = guessServiceRegion(this.url, this.headers);\n    }\n    this.service = service || guessedService || '';\n    this.region = region || guessedRegion || 'us-east-1';\n    this.cache = cache || new Map();\n    this.datetime = datetime || new Date().toISOString().replace(/[:-]|\\.\\d{3}/g, '');\n    this.signQuery = signQuery;\n    this.appendSessionToken = appendSessionToken || this.service === 'iotdevicegateway';\n    this.headers.delete('Host');\n    if (this.service === 's3' && !this.signQuery && !this.headers.has('X-Amz-Content-Sha256')) {\n      this.headers.set('X-Amz-Content-Sha256', 'UNSIGNED-PAYLOAD');\n    }\n    const params = this.signQuery ? this.url.searchParams : this.headers;\n    params.set('X-Amz-Date', this.datetime);\n    if (this.sessionToken && !this.appendSessionToken) {\n      params.set('X-Amz-Security-Token', this.sessionToken);\n    }\n    this.signableHeaders = ['host', ...this.headers.keys()]\n      .filter(header => allHeaders || !UNSIGNABLE_HEADERS.has(header))\n      .sort();\n    this.signedHeaders = this.signableHeaders.join(';');\n    this.canonicalHeaders = this.signableHeaders\n      .map(header => header + ':' + (header === 'host' ? this.url.host : (this.headers.get(header) || '').replace(/\\s+/g, ' ')))\n      .join('\\n');\n    this.credentialString = [this.datetime.slice(0, 8), this.region, this.service, 'aws4_request'].join('/');\n    if (this.signQuery) {\n      if (this.service === 's3' && !params.has('X-Amz-Expires')) {\n        params.set('X-Amz-Expires', '86400');\n      }\n      params.set('X-Amz-Algorithm', 'AWS4-HMAC-SHA256');\n      params.set('X-Amz-Credential', this.accessKeyId + '/' + this.credentialString);\n      params.set('X-Amz-SignedHeaders', this.signedHeaders);\n    }\n    if (this.service === 's3') {\n      try {\n        this.encodedPath = decodeURIComponent(this.url.pathname.replace(/\\+/g, ' '));\n      } catch (e) {\n        this.encodedPath = this.url.pathname;\n      }\n    } else {\n      this.encodedPath = this.url.pathname.replace(/\\/+/g, '/');\n    }\n    if (!singleEncode) {\n      this.encodedPath = encodeURIComponent(this.encodedPath).replace(/%2F/g, '/');\n    }\n    this.encodedPath = encodeRfc3986(this.encodedPath);\n    const seenKeys = new Set();\n    this.encodedSearch = [...this.url.searchParams]\n      .filter(([k]) => {\n        if (!k) return false\n        if (this.service === 's3') {\n          if (seenKeys.has(k)) return false\n          seenKeys.add(k);\n        }\n        return true\n      })\n      .map(pair => pair.map(p => encodeRfc3986(encodeURIComponent(p))))\n      .sort(([k1, v1], [k2, v2]) => k1 < k2 ? -1 : k1 > k2 ? 1 : v1 < v2 ? -1 : v1 > v2 ? 1 : 0)\n      .map(pair => pair.join('='))\n      .join('&');\n  }\n  async sign() {\n    if (this.signQuery) {\n      this.url.searchParams.set('X-Amz-Signature', await this.signature());\n      if (this.sessionToken && this.appendSessionToken) {\n        this.url.searchParams.set('X-Amz-Security-Token', this.sessionToken);\n      }\n    } else {\n      this.headers.set('Authorization', await this.authHeader());\n    }\n    return {\n      method: this.method,\n      url: this.url,\n      headers: this.headers,\n      body: this.body,\n    }\n  }\n  async authHeader() {\n    return [\n      'AWS4-HMAC-SHA256 Credential=' + this.accessKeyId + '/' + this.credentialString,\n      'SignedHeaders=' + this.signedHeaders,\n      'Signature=' + (await this.signature()),\n    ].join(', ')\n  }\n  async signature() {\n    const date = this.datetime.slice(0, 8);\n    const cacheKey = [this.secretAccessKey, date, this.region, this.service].join();\n    let kCredentials = this.cache.get(cacheKey);\n    if (!kCredentials) {\n      const kDate = await hmac('AWS4' + this.secretAccessKey, date);\n      const kRegion = await hmac(kDate, this.region);\n      const kService = await hmac(kRegion, this.service);\n      kCredentials = await hmac(kService, 'aws4_request');\n      this.cache.set(cacheKey, kCredentials);\n    }\n    return buf2hex(await hmac(kCredentials, await this.stringToSign()))\n  }\n  async stringToSign() {\n    return [\n      'AWS4-HMAC-SHA256',\n      this.datetime,\n      this.credentialString,\n      buf2hex(await hash(await this.canonicalString())),\n    ].join('\\n')\n  }\n  async canonicalString() {\n    return [\n      this.method.toUpperCase(),\n      this.encodedPath,\n      this.encodedSearch,\n      this.canonicalHeaders + '\\n',\n      this.signedHeaders,\n      await this.hexBodyHash(),\n    ].join('\\n')\n  }\n  async hexBodyHash() {\n    let hashHeader = this.headers.get('X-Amz-Content-Sha256') || (this.service === 's3' && this.signQuery ? 'UNSIGNED-PAYLOAD' : null);\n    if (hashHeader == null) {\n      if (this.body && typeof this.body !== 'string' && !('byteLength' in this.body)) {\n        throw new Error('body must be a string, ArrayBuffer or ArrayBufferView, unless you include the X-Amz-Content-Sha256 header')\n      }\n      hashHeader = buf2hex(await hash(this.body || ''));\n    }\n    return hashHeader\n  }\n}\nasync function hmac(key, string) {\n  const cryptoKey = await crypto.subtle.importKey(\n    'raw',\n    typeof key === 'string' ? encoder.encode(key) : key,\n    { name: 'HMAC', hash: { name: 'SHA-256' } },\n    false,\n    ['sign'],\n  );\n  return crypto.subtle.sign('HMAC', cryptoKey, encoder.encode(string))\n}\nasync function hash(content) {\n  return crypto.subtle.digest('SHA-256', typeof content === 'string' ? encoder.encode(content) : content)\n}\nconst HEX_CHARS = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\nfunction buf2hex(arrayBuffer) {\n  const buffer = new Uint8Array(arrayBuffer);\n  let out = '';\n  for (let idx = 0; idx < buffer.length; idx++) {\n    const n = buffer[idx];\n    out += HEX_CHARS[(n >>> 4) & 0xF];\n    out += HEX_CHARS[n & 0xF];\n  }\n  return out\n}\nfunction encodeRfc3986(urlEncodedStr) {\n  return urlEncodedStr.replace(/[!'()*]/g, c => '%' + c.charCodeAt(0).toString(16).toUpperCase())\n}\nfunction guessServiceRegion(url, headers) {\n  const { hostname, pathname } = url;\n  if (hostname.endsWith('.on.aws')) {\n    const match = hostname.match(/^[^.]{1,63}\\.lambda-url\\.([^.]{1,63})\\.on\\.aws$/);\n    return match != null ? ['lambda', match[1] || ''] : ['', '']\n  }\n  if (hostname.endsWith('.r2.cloudflarestorage.com')) {\n    return ['s3', 'auto']\n  }\n  if (hostname.endsWith('.backblazeb2.com')) {\n    const match = hostname.match(/^(?:[^.]{1,63}\\.)?s3\\.([^.]{1,63})\\.backblazeb2\\.com$/);\n    return match != null ? ['s3', match[1] || ''] : ['', '']\n  }\n  const match = hostname.replace('dualstack.', '').match(/([^.]{1,63})\\.(?:([^.]{0,63})\\.)?amazonaws\\.com(?:\\.cn)?$/);\n  let service = (match && match[1]) || '';\n  let region = match && match[2];\n  if (region === 'us-gov') {\n    region = 'us-gov-west-1';\n  } else if (region === 's3' || region === 's3-accelerate') {\n    region = 'us-east-1';\n    service = 's3';\n  } else if (service === 'iot') {\n    if (hostname.startsWith('iot.')) {\n      service = 'execute-api';\n    } else if (hostname.startsWith('data.jobs.iot.')) {\n      service = 'iot-jobs-data';\n    } else {\n      service = pathname === '/mqtt' ? 'iotdevicegateway' : 'iotdata';\n    }\n  } else if (service === 'autoscaling') {\n    const targetPrefix = (headers.get('X-Amz-Target') || '').split('.')[0];\n    if (targetPrefix === 'AnyScaleFrontendService') {\n      service = 'application-autoscaling';\n    } else if (targetPrefix === 'AnyScaleScalingPlannerFrontendService') {\n      service = 'autoscaling-plans';\n    }\n  } else if (region == null && service.startsWith('s3-')) {\n    region = service.slice(3).replace(/^fips-|^external-1/, '');\n    service = 's3';\n  } else if (service.endsWith('-fips')) {\n    service = service.slice(0, -5);\n  } else if (region && /-\\d$/.test(service) && !/-\\d$/.test(region)) {\n[service, region] = [region, service];\n  }\n  return [HOST_SERVICES[service] || service, region || '']\n}\n\nexport { AwsClient, AwsV4Signer };\n", "/**\n * Secure HLS Video Streaming Cloudflare Worker\n * Provides Firebase-authenticated access to HLS videos stored in R2 with signed URLs\n */\n\nimport { AwsClient } from 'aws4fetch';\n\nexport default {\n  async fetch(request, env, ctx) {\n    const url = new URL(request.url);\n    const corsHeaders = {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    };\n\n    // Handle CORS preflight\n    if (request.method === 'OPTIONS') {\n      return new Response(null, { headers: corsHeaders });\n    }\n\n    try {\n      // Extract Firebase ID token from Authorization header\n      const authHeader = request.headers.get('Authorization');\n      if (!authHeader || !authHeader.startsWith('Bearer ')) {\n        return new Response('Unauthorized: Missing or invalid token', {\n          status: 401,\n          headers: corsHeaders\n        });\n      }\n\n      const idToken = authHeader.substring(7);\n      \n      // Validate Firebase ID token\n      const isValidToken = await validateFirebaseToken(idToken, env);\n      if (!isValidToken) {\n        return new Response('Unauthorized: Invalid Firebase token', {\n          status: 401,\n          headers: corsHeaders\n        });\n      }\n\n      // Parse the requested path\n      const pathname = url.pathname;\n      \n      // Remove leading slash and decode\n      const objectKey = decodeURIComponent(pathname.substring(1));\n      \n      if (!objectKey) {\n        return new Response('Bad Request: No file specified', {\n          status: 400,\n          headers: corsHeaders\n        });\n      }\n\n      // Check if this is an HLS playlist request\n      if (objectKey.endsWith('.m3u8')) {\n        return await handlePlaylistRequest(objectKey, env, corsHeaders);\n      }\n      \n      // Check if this is a segment request\n      if (objectKey.endsWith('.ts') || objectKey.endsWith('.mp4')) {\n        return await handleSegmentRequest(objectKey, env, corsHeaders);\n      }\n\n      return new Response('Not Found: Unsupported file type', {\n        status: 404,\n        headers: corsHeaders\n      });\n\n    } catch (error) {\n      console.error('Worker error:', error);\n      return new Response('Internal Server Error', {\n        status: 500,\n        headers: corsHeaders\n      });\n    }\n  }\n};\n\n// Cache for Firebase public keys\nconst firebasePublicKeys = new Map();\nconst KEYS_CACHE_TTL = 3600000; // 1 hour in milliseconds\n\n/**\n * Validates Firebase ID token with proper signature verification\n */\nasync function validateFirebaseToken(idToken, env) {\n  try {\n    const [headerB64, payloadB64, signatureB64] = idToken.split('.');\n    if (!headerB64 || !payloadB64 || !signatureB64) {\n      console.log('Invalid token format');\n      return false;\n    }\n\n    // Decode JWT header and payload\n    const header = JSON.parse(atob(headerB64.replace(/-/g, '+').replace(/_/g, '/')));\n    const payload = JSON.parse(atob(payloadB64.replace(/-/g, '+').replace(/_/g, '/')));\n    \n    const now = Math.floor(Date.now() / 1000);\n    \n    // Basic payload validation\n    if (!payload.exp || payload.exp < now) {\n      console.log('Token expired');\n      return false;\n    }\n    \n    if (!payload.iat || payload.iat > now) {\n      console.log('Token issued in the future');\n      return false;\n    }\n    \n    if (payload.aud !== env.FIREBASE_PROJECT_ID) {\n      console.log('Invalid audience');\n      return false;\n    }\n    \n    if (payload.iss !== `https://securetoken.google.com/${env.FIREBASE_PROJECT_ID}`) {\n      console.log('Invalid issuer');\n      return false;\n    }\n    \n    if (!payload.sub || payload.sub.length === 0 || payload.sub.length > 128) {\n      console.log('Invalid subject');\n      return false;\n    }\n    \n    // Get Firebase public key for signature verification\n    const publicKey = await getFirebasePublicKey(header.kid, env);\n    if (!publicKey) {\n      console.log('Could not get public key for kid:', header.kid);\n      return false;\n    }\n    \n    // Verify JWT signature\n    const isValidSignature = await verifyJWTSignature(\n      `${headerB64}.${payloadB64}`,\n      signatureB64,\n      publicKey\n    );\n    \n    if (!isValidSignature) {\n      console.log('Invalid token signature');\n      return false;\n    }\n    \n    return true;\n  } catch (error) {\n    console.error('Token validation error:', error);\n    return false;\n  }\n}\n\n/**\n * Gets Firebase public key from Google's JWKS endpoint with caching\n */\nasync function getFirebasePublicKey(kid, env) {\n  try {\n    const cacheKey = `firebase_key_${kid}`;\n    const cached = firebasePublicKeys.get(cacheKey);\n    \n    if (cached && Date.now() - cached.timestamp < KEYS_CACHE_TTL) {\n      return cached.key;\n    }\n    \n    // Fetch public keys from Google\n    const response = await fetch('https://www.googleapis.com/robot/v1/metadata/x509/securetoken@system.gserviceaccount.com');\n    \n    if (!response.ok) {\n      console.error('Failed to fetch Firebase public keys');\n      return null;\n    }\n    \n    const keys = await response.json();\n    const publicKeyPem = keys[kid];\n    \n    if (!publicKeyPem) {\n      console.error('Public key not found for kid:', kid);\n      return null;\n    }\n    \n    // Import the public key\n    const publicKey = await crypto.subtle.importKey(\n      'spki',\n      pemToArrayBuffer(publicKeyPem),\n      { name: 'RSASSA-PKCS1-v1_5', hash: 'SHA-256' },\n      false,\n      ['verify']\n    );\n    \n    // Cache the key\n    firebasePublicKeys.set(cacheKey, {\n      key: publicKey,\n      timestamp: Date.now()\n    });\n    \n    return publicKey;\n  } catch (error) {\n    console.error('Error getting Firebase public key:', error);\n    return null;\n  }\n}\n\n/**\n * Converts PEM format key to ArrayBuffer\n */\nfunction pemToArrayBuffer(pem) {\n  const b64 = pem.replace(/-{5}[^-]+-{5}/g, '').replace(/\\s/g, '');\n  const binary = atob(b64);\n  const buffer = new ArrayBuffer(binary.length);\n  const view = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    view[i] = binary.charCodeAt(i);\n  }\n  return buffer;\n}\n\n/**\n * Verifies JWT signature using Web Crypto API\n */\nasync function verifyJWTSignature(data, signature, publicKey) {\n  try {\n    const signatureBuffer = base64UrlToArrayBuffer(signature);\n    const dataBuffer = new TextEncoder().encode(data);\n    \n    return await crypto.subtle.verify(\n      'RSASSA-PKCS1-v1_5',\n      publicKey,\n      signatureBuffer,\n      dataBuffer\n    );\n  } catch (error) {\n    console.error('Signature verification error:', error);\n    return false;\n  }\n}\n\n/**\n * Converts base64url to ArrayBuffer\n */\nfunction base64UrlToArrayBuffer(base64Url) {\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const binary = atob(base64);\n  const buffer = new ArrayBuffer(binary.length);\n  const view = new Uint8Array(buffer);\n  for (let i = 0; i < binary.length; i++) {\n    view[i] = binary.charCodeAt(i);\n  }\n  return buffer;\n}\n\n/**\n * Handles HLS playlist requests - fetches .m3u8 and modifies segment URLs\n */\nasync function handlePlaylistRequest(objectKey, env, corsHeaders) {\n  try {\n    // Create AWS client for R2\n    const r2Client = new AwsClient({\n      accessKeyId: env.R2_ACCESS_KEY_ID,\n      secretAccessKey: env.R2_SECRET_KEY,\n      region: 'auto'\n    });\n\n    // Construct R2 URL\n    const r2Url = `https://${env.ACCOUNT_ID}.r2.cloudflarestorage.com/${env.BUCKET_NAME}/${objectKey}`;\n    \n    // Fetch the playlist from R2\n    const response = await r2Client.fetch(r2Url);\n    \n    if (!response.ok) {\n      return new Response('Not Found: Playlist not found', {\n        status: 404,\n        headers: corsHeaders\n      });\n    }\n\n    let playlistContent = await response.text();\n    \n    // Parse and modify the playlist\n    const lines = playlistContent.split('\\n');\n    const modifiedLines = [];\n\n    for (let line of lines) {\n      line = line.trim();\n      \n      // Check if line contains a segment reference\n      if (line && !line.startsWith('#') && (line.endsWith('.ts') || line.endsWith('.mp4'))) {\n        // Generate signed URL for the segment\n        const segmentKey = line.includes('/') ? line : `${objectKey.split('/').slice(0, -1).join('/')}/${line}`;\n        const signedUrl = await generateSignedUrl(segmentKey, env);\n        modifiedLines.push(signedUrl);\n      } else {\n        modifiedLines.push(line);\n      }\n    }\n\n    const modifiedPlaylist = modifiedLines.join('\\n');\n\n    return new Response(modifiedPlaylist, {\n      headers: {\n        ...corsHeaders,\n        'Content-Type': 'application/vnd.apple.mpegurl',\n        'Cache-Control': 'no-cache, no-store, must-revalidate'\n      }\n    });\n\n  } catch (error) {\n    console.error('Playlist handling error:', error);\n    return new Response('Internal Server Error', {\n      status: 500,\n      headers: corsHeaders\n    });\n  }\n}\n\n/**\n * Handles segment requests - redirects to signed URL\n */\nasync function handleSegmentRequest(objectKey, env, corsHeaders) {\n  try {\n    const signedUrl = await generateSignedUrl(objectKey, env);\n    \n    return Response.redirect(signedUrl, 302);\n    \n  } catch (error) {\n    console.error('Segment handling error:', error);\n    return new Response('Internal Server Error', {\n      status: 500,\n      headers: corsHeaders\n    });\n  }\n}\n\n/**\n * Generates AWS S3-style signed URL for R2 objects with configurable expiration\n */\nasync function generateSignedUrl(objectKey, env) {\n  try {\n    // Get configurable TTL from environment (default 15 minutes, max 12 hours)\n    const defaultTtl = 900; // 15 minutes\n    const maxTtl = 43200;   // 12 hours\n    let ttlSeconds = parseInt(env.SIGNED_URL_TTL_SECONDS) || defaultTtl;\n    \n    if (ttlSeconds > maxTtl) {\n      ttlSeconds = maxTtl;\n    }\n    if (ttlSeconds < 60) {\n      ttlSeconds = 60; // minimum 1 minute\n    }\n\n    const r2Client = new AwsClient({\n      accessKeyId: env.R2_ACCESS_KEY_ID,\n      secretAccessKey: env.R2_SECRET_KEY,\n      region: 'auto',\n      service: 's3'\n    });\n\n    const url = `https://${env.ACCOUNT_ID}.r2.cloudflarestorage.com/${env.BUCKET_NAME}/${objectKey}`;\n    \n    // Create presigned URL with proper expiration\n    const signedRequest = await r2Client.sign(\n      new Request(url, { method: 'GET' }),\n      {\n        aws: { \n          signQuery: true,\n          allHeaders: false\n        },\n        headers: {\n          'presigned-expires': ttlSeconds.toString()\n        }\n      }\n    );\n\n    return signedRequest.url;\n    \n  } catch (error) {\n    console.error('Signed URL generation error:', error);\n    throw error;\n  }\n}", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/home/runner/workspace/src/worker.js\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/home/runner/workspace/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/home/runner/workspace/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/home/runner/workspace/src/worker.js\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/home/runner/workspace/.wrangler/tmp/bundle-MuY1ls/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/home/runner/workspace/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/home/runner/workspace/.wrangler/tmp/bundle-MuY1ls/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/home/runner/workspace/.wrangler/tmp/bundle-MuY1ls/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": "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",
  "names": ["match"]
}
